<!DOCTYPE html>
<html lang="en">
<head>
  <meta charset="UTF-8">
  <meta name="viewport" content="width=device-width, initial-scale=1.0">
  <title><%= title %></title>
  <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0-alpha1/dist/css/bootstrap.min.css" rel="stylesheet">
  <link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/bootstrap-icons@1.10.3/font/bootstrap-icons.css">
  <link href="https://fonts.googleapis.com/css2?family=Inter:wght@300;400;500;600;700&display=swap" rel="stylesheet">
  <style>
    :root {
      --primary-color: #3b82f6;
      --primary-dark: #1d4ed8;
      --primary-light: #60a5fa;
      --secondary-color: #9ca3af;
      --success-color: #10b981;
      --warning-color: #f59e0b;
      --danger-color: #ef4444;
      --dark-bg: #111827;
      --darker-bg: #0f172a;
      --card-bg: #1e293b;
      --border-color: #374151;
      --text-color: #e5e7eb;
      --text-muted: #9ca3af;
      --table-hover: rgba(59, 130, 246, 0.1);
    }
    
    body {
      background-color: var(--dark-bg);
      color: var(--text-color);
      font-family: 'Inter', -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, Oxygen, Ubuntu, sans-serif;
      line-height: 1.5;
      min-height: 100vh;
    }
    
    .navbar {
      background-color: var(--darker-bg);
      border-bottom: 1px solid var(--border-color);
      padding: 0.75rem 1rem;
    }
    
    .navbar-brand {
      font-weight: 600;
      color: var(--text-color);
      display: flex;
      align-items: center;
      gap: 0.5rem;
    }
    
    .navbar-brand i {
      color: var(--primary-light);
    }
    
    .card {
      border: none;
      border-radius: 8px;
      background-color: var(--card-bg);
      margin-bottom: 1.5rem;
      box-shadow: 0 4px 6px -1px rgba(0, 0, 0, 0.1), 0 2px 4px -1px rgba(0, 0, 0, 0.06);
    }
    
    .card-header {
      background-color: var(--card-bg);
      padding: 1rem 1.25rem;
      border-bottom: 1px solid var(--border-color);
      font-weight: 600;
      display: flex;
      align-items: center;
      justify-content: space-between;
      color: var(--text-color);
    }
    
    .card-header i {
      color: var(--primary-light);
      margin-right: 0.5rem;
    }
    
    .table {
      margin-bottom: 0;
      color: var(--text-color);
    }
    
    .table th {
      font-weight: 500;
      color: var(--text-muted);
      text-transform: uppercase;
      font-size: 0.75rem;
      letter-spacing: 0.05em;
      padding: 0.75rem 1.25rem;
      border-bottom-width: 1px;
      border-color: var(--border-color);
    }
    
    .table td {
      padding: 0.75rem 1.25rem;
      vertical-align: middle;
      border-color: var(--border-color);
    }
    
    .table-hover tbody tr:hover {
      background-color: var(--table-hover);
    }
    
    .badge {
      font-weight: 500;
      padding: 0.35em 0.65em;
      font-size: 0.75em;
      border-radius: 0.375rem;
    }
    
    .badge-online {
      background-color: var(--success-color);
      color: white;
    }
    
    .badge-stopped {
      background-color: var(--danger-color);
      color: white;
    }
    
    .badge-errored {
      background-color: var(--warning-color);
      color: white;
    }
    
    .btn {
      font-weight: 500;
      font-size: 0.875rem;
      padding: 0.375rem 0.75rem;
      border-radius: 0.375rem;
      display: inline-flex;
      align-items: center;
      gap: 0.25rem;
    }
    
    .btn-sm {
      padding: 0.25rem 0.5rem;
      font-size: 0.75rem;
    }
    
    .btn-outline-primary {
      color: var(--primary-light);
      border-color: var(--primary-light);
    }
    
    .btn-outline-primary:hover {
      background-color: var(--primary-dark);
      border-color: var(--primary-light);
      color: white;
    }
    
    .btn-outline-secondary {
      color: var(--secondary-color);
      border-color: var(--secondary-color);
    }
    
    .btn-outline-secondary:hover {
      background-color: var(--secondary-color);
      color: var(--darker-bg);
    }
    
    .btn-outline-danger {
      color: var(--danger-color);
      border-color: var(--danger-color);
    }
    
    .btn-outline-danger:hover {
      background-color: var(--danger-color);
      color: white;
    }
    
    .btn-outline-success {
      color: var(--success-color);
      border-color: var(--success-color);
    }
    
    .btn-outline-success:hover {
      background-color: var(--success-color);
      color: white;
    }
    
    .actions-column {
      white-space: nowrap;
    }
    
    .form-time {
      font-size: 0.875rem;
      color: var(--text-muted);
      font-weight: 500;
    }
    
    #notification {
      position: fixed;
      top: 20px;
      right: 20px;
      padding: 1rem;
      color: white;
      border-radius: 8px;
      display: none;
      z-index: 1000;
      box-shadow: 0 4px 6px -1px rgba(0, 0, 0, 0.1), 0 2px 4px -1px rgba(0, 0, 0, 0.06);
      max-width: 350px;
    }
    
    .table-container {
      border-radius: 0 0 8px 8px;
      overflow: hidden;
    }
    
    .process-name {
      font-weight: 500;
      color: var(--text-color);
    }
    
    .stats-value {
      font-weight: 500;
    }
    
    .stats-label {
      font-size: 0.75rem;
      color: var(--text-muted);
    }
    
    .bg-secondary {
      background-color: var(--secondary-color) !important;
    }
    
    .alert-danger {
      background-color: rgba(239, 68, 68, 0.2);
      border-color: rgba(239, 68, 68, 0.3);
      color: var(--danger-color);
    }
  </style>
</head>
<body>
  <div id="notification"></div>
  
  <nav class="navbar navbar-expand-lg mb-4">
    <div class="container">
      <a class="navbar-brand" href="/">
        <i class="bi bi-hdd-stack"></i> <%= title %>
      </a>
      <div class="d-flex">
        <button class="btn btn-sm btn-outline-primary" onclick="location.reload()">
          <i class="bi bi-arrow-clockwise"></i> Refresh
        </button>
      </div>
    </div>
  </nav>
  
  <div class="container">
    <% if (error) { %>
      <div class="alert alert-danger">
        <i class="bi bi-exclamation-triangle"></i> Error: <%= error %>
      </div>
    <% } %>
    
    <div class="card">
      <div class="card-header">
        <div>
          <i class="bi bi-hdd-stack"></i> Processes <span class="badge bg-secondary ms-2"><%= processes.length %></span>
        </div>
        <div class="form-time" id="time"></div>
      </div>
      <div class="table-container">
        <div class="table-responsive">
          <table class="table table-hover mb-0">
            <thead>
              <tr>
                <th>ID</th>
                <th>Name</th>
                <th>Status</th>
                <th>CPU</th>
                <th>Memory</th>
                <th>Uptime</th>
                <th>Restarts</th>
                <th>Instances</th>
                <th>Actions</th>
              </tr>
            </thead>
            <tbody>
              <% if (processes.length === 0) { %>
                <tr>
                  <td colspan="9" class="text-center py-4">No processes found</td>
                </tr>
              <% } else { %>
                <% processes.forEach(process => { %>
                  <tr>
                    <td><%= process.id %></td>
                    <td class="process-name"><%= process.name %></td>
                    <td>
                      <% if (process.status === 'online') { %>
                        <span class="badge badge-online">Online</span>
                      <% } else if (process.status === 'stopped') { %>
                        <span class="badge badge-stopped">Stopped</span>
                      <% } else { %>
                        <span class="badge badge-errored"><%= process.status %></span>
                      <% } %>
                    </td>
                    <td class="stats-value"><%= process.cpu %></td>
                    <td class="stats-value"><%= process.memory %></td>
                    <td class="stats-value"><%= process.uptime %></td>
                    <td class="stats-value"><%= process.restarts %></td>
                    <td class="stats-value"><%= process.instances %></td>
                    <td class="actions-column">
                      <a href="/logs/<%= process.name %>" class="btn btn-sm btn-outline-secondary">
                        <i class="bi bi-file-text"></i> Logs
                      </a>
                      <button class="btn btn-sm btn-outline-primary" onclick="processAction('restart', <%= process.id %>)">
                        <i class="bi bi-arrow-repeat"></i> Restart
                      </button>
                      <% if (process.status === 'online') { %>
                        <button class="btn btn-sm btn-outline-danger" onclick="processAction('stop', <%= process.id %>)">
                          <i class="bi bi-stop-fill"></i> Stop
                        </button>
                      <% } else { %>
                        <button class="btn btn-sm btn-outline-success" onclick="processAction('start', <%= process.id %>)">
                          <i class="bi bi-play-fill"></i> Start
                        </button>
                      <% } %>
                      <button class="btn btn-sm btn-outline-danger" onclick="processAction('delete', <%= process.id %>)">
                        <i class="bi bi-trash"></i> Delete
                      </button>
                    </td>
                  </tr>
                <% }); %>
              <% } %>
            </tbody>
          </table>
        </div>
      </div>
    </div>
  </div>
  
  <script>
    // Process actions
    function processAction(action, id) {
      fetch(`/api/${action}/${id}`, {
        method: 'POST',
        headers: {
          'Content-Type': 'application/json'
        }
      })
      .then(res => res.json())
      .then(data => {
        if (data.success) {
          showNotification(`Process ${action} command executed successfully`, false);
          setTimeout(() => {
            location.reload();
          }, 1000);
        } else {
          showNotification(`Error: ${data.error}`, true);
        }
      })
      .catch(err => {
        showNotification(`Error: ${err.message}`, true);
      });
    }

    function showNotification(message, isError = false) {
      const notification = document.getElementById('notification');
      notification.textContent = message;
      notification.style.backgroundColor = isError ? '#ef4444' : '#10b981';
      notification.style.display = 'block';
      
      setTimeout(() => {
        notification.style.display = 'none';
      }, 3000);
    }

    // Display time
    function updateTime() {
      const now = new Date();
      const options = { 
        weekday: 'short',
        year: 'numeric', 
        month: 'short', 
        day: 'numeric',
        hour: '2-digit', 
        minute: '2-digit',
        second: '2-digit'
      };
      
      document.getElementById('time').textContent = now.toLocaleString('en-US', options);
    }

    setInterval(updateTime, 1000);
    updateTime();
  </script>
</body>
</html>